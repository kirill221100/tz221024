services:
  db:
    container_name: db
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env_prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    env_file: .env_prod
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    expose:
      - 6379
    command: redis-server --requirepass $REDIS_PASSWORD

  tz_base:
    container_name: tz_base
    build: .
    ports:
      - 80:80
    command: bash -c "alembic upgrade head && gunicorn --workers=3 -b 0.0.0.0:80 -k uvicorn.workers.UvicornWorker main:app"
    environment:
      APP_NAME: "tz_base"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  postgres_data:
  redis-data:


